felicidad = read.csv("tabelas/world-happiness-report-2021.csv")
str(felicidad)
felicidad$Regional.indicator = as.factor(felicidad$Regional.indicator)
felicidad = felicidad[,c(1:3,8:12)]
names(felicidad)
colnames(felicidad) = c("Pais", "Region", "Indice_felicidad", "Suporte_social", "Expectativa_de_vida", "Liberdad_de_escojas", "Generosidad", "Percepcion_de_corrupcion")
head(felicidad)
levels(felicidad$Region)
sample(felicidad[felicidad$Región == "East Asia",], 5)[1:5,]
sample(felicidad[felicidad$Region == "East Asia",], 5)[1:5,]
aggregate(Región ~ Indice_felicidad, data = felicidad, FUN = sample)
aggregate(Region ~ Indice_felicidad, data = felicidad, FUN = sample)
sample(felicidad[felicidad$Region == "East Asia",], 5)[1:5,]
levels(felicidad$Region)
for (i in 1:length(levels(felicidad$Region))) {
sample(felicidad[felicidad$Region == felicidad$Region[i],], 5)[1:5,]
}
print(sample(felicidad[felicidad$Region == felicidad$Region[i],], 5)[1:5,])
for (i in 1:length(levels(felicidad$Region))) {
print(sample(felicidad[felicidad$Region == felicidad$Region[i],], 5)[1:5,])
}
for (i in 1:length(levels(felicidad$Region))) {
print(sample(felicidad$Indice_felicidad[felicidad$Region == felicidad$Region[i]], 5)[1:5,])
}
for (i in 1:length(levels(felicidad$Region))) {
print(sample(felicidad$Indice_felicidad[felicidad$Region == felicidad$Region[i]], 5)[1:5,])
}
print(sample(felicidad$Indice_felicidad[felicidad$Region == felicidad$Region[i],], 5)[1:5,])
aggregate(Region ~ Indice_felicidad, data = felicidad, FUN = sample)
aggregate(felicidad$Region ~ Indice_felicidad, data = felicidad, FUN = sample)
str(felicidad)
levels(felicidad)
levels(felicidad$Region)
reg = levels(felicidad$Region)
for (i in 1:length(levels(felicidad$Region))) {
sample(felicidad[felicidad$Region == levels(felicidad$Region[i]),], 5)[1:5,]
}
aggregate(felicidad$Region ~ Indice_felicidad, data = felicidad, FUN = sample)
sample(felicidad[felicidad$Region == levels(felicidad$Region[i]),], 5)[1:5,]
for (i in 1:length(levels(felicidad$Region))) {
sample(felicidad[felicidad$Region == levels(felicidad$Region[i]),], 5)[1:5,]
}
sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,]
print(sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
for (i in 1:length(levels(felicidad$Region))) {
print(sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
}
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df[i](sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
}
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df[i] = (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
}
for (i in 1:length(levels(felicidad$Region))) {
df[i,] = (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
}
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 5)[1:5,])
}
df
dim(df)
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]
}
df
df = data.frame()
df
for (i in 1:length(levels(felicidad$Region))) {
df = sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]
}
df
for (i in 1:length(levels(felicidad$Region))) {
print(sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,])
}
felicidad[felicidad$Region == levels(felicidad$Region)[1],]
felicidad[felicidad$Region == levels(felicidad$Region)[2],]
df = data.frame()
for (i in s1:length(levels(felicidad$Region))) {
df = rbind(df, (sample(felicidad[felicidad$Region == levels(felicidad$Region)[2],], 4)[1:4,]))
}
for (i in s1:length(levels(felicidad$Region))) {
df = rbind(df, (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
for (i in 1:length(levels(felicidad$Region))) {
df = rbind(df, (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
for (i in 1:length(levels(felicidad$Region))) {
df = rbind(df, (sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
for (i in 1:length(levels(felicidad$Region))) {
append(df)
df = sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]
}
?append
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]
append(df, df)
}
df
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = append(df, sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,])
}
df
for (i in 1:length(levels(felicidad$Region))) {
df = as.data.frame(append(df, sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
df
View(df)
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = as.data.frame(rbind(df, sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
df = data.frame()
for (i in 1:length(levels(felicidad$Region))) {
df = data.frame(append(df, sample(felicidad[felicidad$Region == levels(felicidad$Region)[i],], 4)[1:4,]))
}
View(df)
library(dplyr)
felicidad %>%
group_by(Region) %>%
sample_n(4)
felicidad = felicidad %>%
group_by(Region) %>%
sample_n(4)
write.csv("tabelas/felicidad_red.csv")
write.csv("tabelas/felicidad_red.csv", quote = F, row.names = T)
write.csv("tabelas/felicidad_red.csv", quote = F, row.names = F)
write.csv("tabelas/felicidad_red.csv", felicidad,  quote = F, row.names = F)
felicidad = felicidad %>%
group_by(Region) %>%
sample_n(4)
write.csv(felicidad, "tabelas/felicidad_red.csv", quote = F, row.names = F)
felicidad = read.csv("tabelas/world-happiness-report-2021.csv")
str(felicidad)
felicidad = read.csv("tabelas/world-happiness-report-2021.csv")
str(felicidad)
felicidad$Regional.indicator = as.factor(felicidad$Regional.indicator)
felicidad = felicidad[,c(1:3,8:12)]
names(felicidad)
colnames(felicidad) = c("Pais", "Region", "Indice_felicidad", "Suporte_social", "Expectativa_de_vida", "Liberdad_de_escojas", "Generosidad", "Percepcion_de_corrupcion")
head(felicidad)
levels(felicidad$Region)
df = data.frame()
library(dplyr)
felicidad = felicidad %>%
group_by(Region) %>%
sample_n(4)
write.csv(felicidad, "tabelas/felicidad_red.csv", quote = F, row.names = F)
felicidad = read.csv("tabelas/felicidad_red.csv")
felicidad
felicidad[sort(felicidad$Indice_felicidad),]
felicidad = felicidad %>%
group_by(Region) %>%
sample_n(4, replace = F)
write.csv(felicidad, "tabelas/felicidad_red.csv", quote = F, row.names = F)
felicidad = read.csv("tabelas/felicidad_red.csv")
felicidad
felicidad[sort(felicidad$Indice_felicidad),]
felicidad = read.csv("tabelas/world-happiness-report-2021.csv")
str(felicidad)
felicidad$Regional.indicator = as.factor(felicidad$Regional.indicator)
felicidad = felicidad[,c(1:3,8:12)]
names(felicidad)
colnames(felicidad) = c("Pais", "Region", "Indice_felicidad", "Suporte_social", "Expectativa_de_vida", "Liberdad_de_escojas", "Generosidad", "Percepcion_de_corrupcion")
levels(felicidad$Region)
df = data.frame()
library(dplyr)
felicidad = felicidad %>%
group_by(Region) %>%
sample_n(4, replace = F)
write.csv(felicidad, "tabelas/felicidad_red.csv", quote = F, row.names = F)
felicidad2 = read.csv("tabelas/felicidad_red.csv")
felicidad2
felicidad[sort(felicidad$Indice_felicidad),]
felicidad2[sort(felicidad2$Indice_felicidad),]
felicidad2[order(felicidad2$Indice_felicidad),]
View(felicidad2)
felicidad = read.csv("tabelas/felicidad_red.csv")
felicidad
felicidad = read.csv("tabelas/world-happiness-report-2021.csv")
str(felicidad)
felicidad = read.csv("tabelas/felicidad_red.csv")
felicidad
felicidad2[sort(felicidad2$Indice_felicidad),]
felicidad[sort(felicidad$Indice_felicidad),]
felicidad[order(felicidad$Indice_felicidad),]
summary(felicidad)
length(felicidad)
dim(felicidad)
mean(felicidad)
mean(felicidad$Indice_felicidad)
aggregate(Region ~ Indice_felicidad, data = felicidad, FUN = mean)
aggregate(Indice_felicidad ~Region, data = felicidad, FUN = mean)
aggregate(Indice_felicidad ~ Region, data = felicidad, FUN = sd)
sd = aggregate(Indice_felicidad ~ Region, data = felicidad, FUN = sd)
sd$Indice_felicidad / nrow(sd)
sd$Indice_felicidad / sqrt(nrow(felicidad))
median(felicidad)
median(felicidad$Indice_felicidad)
var(felicidad$Indice_felicidad)
range(felicidad$Indice_felicidad)
#) Testes de normalidade
shapiro.test(felicidad$Indice_felicidad)   # (Shapiro-Wilk)
qqnorm(felicidad$Indice_felicidad)         # Q-Q plot
qqline(felicidad$Indice_felicidad)
qqnorm(felicidad$Indice_felicidad)         # Q-Q plot
qqline(felicidad$Indice_felicidad)
qqline(felicidad$Indice_felicidad)         # Acrescentando a linha de refer?ncia
qqplot(felicidad$Indice_felicidad)
qqnorm(felicidad$Indice_felicidad)         # Q-Q plot
qqline(felicidad$Indice_felicidad)         # Acrescentando a linha de refer?ncia
qqnorm(felicidad$Indice_felicidad)         # Q-Q plot
pairs(felicidad)
pairs(felicidad$Indice_felicidad)
#) Testes de normalidade
shapiro.test(felicidad$Indice_felicidad)   # (Shapiro-Wilk)
require(outliers)     #  UM PACOTE PARA IDENTIFICAR VALORES DISCREPANTES (? necess?rio fazer "download")
install.packages(outliers)
install.packages("outliers")
#) Ajustando uma curva normal ao histograma
m-3*s; m+3*s           # limites pr?ticos da vari?vel sob X~Normal
hist(felicidad$Indice_felicidad,freq=FALSE,plot=T,xlim=c(4,8)) # hist.c/densid.de prob.
hist(felicidad$Indice_felicidad,freq=FALSE,plot=T) # hist.c/densid.de prob.
curve(dnorm(x,m,s), add=T)          # ajustando a curva Normal
#) Ajustando uma curva normal ao histograma
mean(felicidad$Indice_felicidad-3*sd(felicidad$Indice_felicidad); mean(felicidad$Indice_felicidad)+3*sd(felicidad$Indice_felicidad)           # limites pr?ticos da vari?vel sob X~Normal
#) Ajustando uma curva normal ao histograma
mean(felicidad$Indice_felicidad-3*sd(felicidad$Indice_felicidad) mean(felicidad$Indice_felicidad)+3*sd(felicidad$Indice_felicidad)           # limites pr?ticos da vari?vel sob X~Normal
#) Ajustando uma curva normal ao histograma
mean(felicidad$Indice_felicidad-3)*sd(felicidad$Indice_felicidad) mean(felicidad$Indice_felicidad)+3*sd(felicidad$Indice_felicidad)           # limites pr?ticos da vari?vel sob X~Normal
#) Ajustando uma curva normal ao histograma
mean(felicidad$Indice_felicidad-3)*sd(felicidad$Indice_felicidad)
mean(felicidad$Indice_felicidad)+3*sd(felicidad$Indice_felicidad)           # limites pr?ticos da vari?vel sob X~Normal
hist(felicidad$Indice_felicidad,freq=FALSE,plot=T) # hist.c/densid.de prob.
curve(dnorm(x,m,s),4,8, add=T)          # ajustando a curva Normal
hist(felicidad$Indice_felicidad,freq=FALSE,plot=T) # hist.c/densid.de prob.
curve(dnorm(-1,0,1), add=T)          # ajustando a curva Normal
?curve
m = mean(felicidad$Indice_felicidad)
s = sd(felicidad$Indice_felicidad)
hist(Alt,freq=FALSE,plot=T,xlim=c(4,8)) # hist.c/densid.de prob.
hist(felicidad$Indice_felicidad,freq=FALSE,plot=T) # hist.c/densid.de prob.
curve(dnorm(felicidad$Indice_felicidad,m,s), add=T)          # ajustando a curva Normal
ic_95_med = t.test(felicidad$Indice_felicidad,conf.level=.95)
ic_95_med     # IC 95%_m?dia (param?trica)
ic_99_med<- t.test(felicidad$Indice_felicidad,conf.level=.99)
ic_99_med     # IC 99%_m?dia (param?trica)
ic_99_med = t.test(felicidad$Indice_felicidad,conf.level=.99)
ic_99_med
install.packages("plotrix")
install.packages("plotrix")      # Install plotrix package
