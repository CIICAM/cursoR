return(futuro)
}
unlist(sapply(data$Social.support,fun))
fun = function(x) {
futuro = if (x < 0.8) {
x*1.02*15
}else{
futuro= x*1.015*15
}
return(futuro)
}
unlist(sapply(data$Social.support,fun))
fun = function(x) {
futuro = if (data$Ladder.score < 0.8) {
x*1.02*15
}else{
futuro= x*1.015*15
}
return(futuro)
}
unlist(sapply(data$Social.support,fun))
fun = function(ss, ls) {
if (ls < 0.8) {
futuro = ss*1.02*15
}else{
futuro = ss*1.015*15
}
return(futuro)
}
fun(data$Social.support, data$Ladder.score)
qplot(data$Ladder.score)
library(ggplot2)
qplot(data$Ladder.score)
plot(data$Ladder.score)
plot(data$Ladder.score, pch = 0.2)
parmfrow(1,2)
parfrow(1,2)
barplot(data$Ladder.score)
mfrow(1,2)
mfrow(1,2)
mfrow(1,2)
par(mfrow(1,2))
par::mfrow(1,2)
par(mfrow(1,2))
lines(data$Ladder.score)
lines(data$Ladder.score)
line(data$Ladder.score)
par(mfrow(1,2))
plot(data$Ladder.score, pch = 0.2)
line(data$Ladder.score)
lines(data$Ladder.score)
pars(data$Ladder.score
pars(data$Ladder.score)
pars(data$Ladder.score)
minha_tabela = read.table("tabelas/felicidad_america_latina.csv")
minha_tabela = read.csv("tabelas/felicidad_america_latina.csv")
head(minha_tabela)
str(minha_tabela)
is.integer(v)
c(1,2,3,4,5,6,7,8,9,10)
v = c(1,2,3,4,5,6,7,8,9,10)
v
is.integer(v)
is.numeric(v)
v
obj = rep(1:4, 3)
obj * 2
rep(obj, 2)
obj2 = rep((obj + 2), 2)
obj2
obj2 = sum(obj)
obj2
ls()
save(file = "mi_objeto", obj)
save(file = "mi_objeto.RData", obj)
save.image(file = "mi_ambiente.RData")
methods(plots)
methods(plot)
obj
obj = obj + obj
obj
a = mean(obj)
8*32
17+15
obj
obj = rep(1:4, 3)
obj
obj * 2
rep(obj, 2)
obj2 = sum(obj)
obj + obj2
obj3 = obj * 2
obj + obj3
obj*2
obj*c(2,3)
obj*c(2,3,4,5,6,7,8,9,10)
obj*c(2,3,4,5,6,7,8,9,101,11,12)
obj2 = obj * 2
obj + obj2
obj*2
obj*c(2,3)
2^6
36-24
100+150+200
450*0,25
450*0.25
3.65/12
4.2*12
365*2
1000-365
1000-730
270*3
15*15*15
5*15
4*15
4+16+15+13+7+9+13
80
150-80
>>>>>>> Stashed changes
datos = read.csv("Consumo_cerveja.csv", dec = c(","), header = TRUE, sep = ";")
getwd()
datos = read.csv("tabelas/Consumo_cerveja.csv", dec = c(","), header = TRUE, sep = ";")
str(datos)
names(datos)
colnames(datos) = c("Fecha", "Temperatura media", "Temperatura minima",
"Temperatura máxima", "Preciptación", "Finales de semaña",
"Consumo de cerveza en litros")
dim(datos)
head(datos$Fecha)[1]
tail(datos$Fecha)[6]
# Evaluación del consumo de cerveza en litros en 2015
summary(datos$`Consumo de cerveza en litros`)
# Distribuición de los datos
hist(datos$`Consumo de cerveza en litros`)
datos = read.csv("tabelas/Consumo_cerveja.csv", dec = c(","), header = TRUE, sep = ";")
datos = read.csv("tabelas/Consumo_cerveja.csv", dec = c(","), header = TRUE, sep = ";")
str(datos)
names(datos)
colnames(datos) = c("Fecha", "Temperatura media", "Temperatura minima",
"Temperatura máxima", "Preciptación", "Finales de semaña",
"Consumo de cerveza en litros")
dim(datos)
head(datos$Fecha)[1]
tail(datos$Fecha)[6]
# Evaluación del consumo de cerveza en litros en 2015
summary(datos$`Consumo de cerveza en litros`)
# Distribuición de los datos
hist(datos$`Consumo de cerveza en litros`)
# Grafico de cajas
boxplot(datos$`Consumo de cerveza en litros`)
# Distribuición de los datos
hist(datos$`Consumo de cerveza en litros`)
plot(cars)
# Distribuición de los datos
hist(datos$`Consumo de cerveza en litros`)
# Distribuición de los datos
hist(datos$`Consumo de cerveza en litros`)
# Grafico de cajas
boxplot(datos$`Consumo de cerveza en litros`)
str(profesion)
x = rep(1:4, 3)
# Chunk 1
x = rep(1:4, 3)
# Chunk 2
x
# Chunk 3
x * 2
# Chunk 4
rep(x, 2)
# Chunk 5
y = x* 2
# Chunk 6
x + y
# Chunk 7
x*2
x*c(2,3)
# Chunk 8
x*c(2,3,4,5,6,7,8,9,101,11,12)
# Chunk 9
sum(x)
# Chunk 10
mean(x)
# Chunk 11
var(x)
# Chunk 12
z = sum(x)
# Chunk 13
x
# Chunk 14
x = x + x
x
# Chunk 15
X
# Chunk 16
a = mean(x)
# Chunk 17
mean_x = mean(x)
# Chunk 18
ls()
# Chunk 19
save(file = "mi_objeto.RData", obj)
# Chunk 20
save.image(file = "mi_ambiente.RData")
# Chunk 21
i = seq(1:10)
i
# Chunk 22
class(i)
is.integer(i)
# Chunk 23
(n = rep(c(1.1, 2.3, 4.8, 7.0, 10.0), 3))
# Chunk 24
class(n)
is.integer(n)
is.numeric(n)
# Chunk 25
i2 = as.numeric(i)
class(i2)
is.integer(i2)
is.numeric(i2)
# Chunk 26
i
i2
str(i)
str(i2)
# Chunk 27
i == i2
# Chunk 28
i > i2
# Chunk 29
i != 2
# Chunk 30
i >=2
# Chunk 31
i > 2 & i < 5
# Chunk 32
i < 2 | i < 5
# Chunk 33
which(i > 8)
# Chunk 34
kable(data.frame(p = c("TRUE", "TRUE", "FALSE", "FALSE"),
q = c("TRUE", "FALSE", "FASE", "TRUE"),
pq = c("TRUE", "FALSE", "TRIE", "TRUE")))
# Chunk 35
nombres = c("Ana", "Maria", "José", "Juan", "Carlos", "Julia")
# Chunk 36
profesion = c("Biologa", "Ingeniera", "Sociologo", "Ingeniero", "Biologo", "Profesora")
# Chunk 37
str(profesion)
# Chunk 1
x = rep(1:4, 3)
# Chunk 2
x
# Chunk 3
x * 2
# Chunk 4
rep(x, 2)
# Chunk 5
y = x* 2
# Chunk 6
x + y
# Chunk 7
x*2
x*c(2,3)
# Chunk 8
x*c(2,3,4,5,6,7,8,9,101,11,12)
# Chunk 9
sum(x)
# Chunk 10
mean(x)
# Chunk 11
var(x)
# Chunk 12
z = sum(x)
# Chunk 13
x
# Chunk 14
x = x + x
x
# Chunk 15
X
# Chunk 16
a = mean(x)
# Chunk 17
mean_x = mean(x)
# Chunk 18
ls()
# Chunk 19
save(file = "mi_objeto.RData", obj)
# Chunk 20
save.image(file = "mi_ambiente.RData")
# Chunk 21
i = seq(1:10)
i
# Chunk 22
class(i)
is.integer(i)
# Chunk 23
(n = rep(c(1.1, 2.3, 4.8, 7.0, 10.0), 3))
# Chunk 24
class(n)
is.integer(n)
is.numeric(n)
# Chunk 25
i2 = as.numeric(i)
class(i2)
is.integer(i2)
is.numeric(i2)
# Chunk 26
i
i2
str(i)
str(i2)
# Chunk 27
i == i2
# Chunk 28
i > i2
# Chunk 29
i != 2
# Chunk 30
i >=2
# Chunk 31
i > 2 & i < 5
# Chunk 32
i < 2 | i < 5
# Chunk 33
which(i > 8)
# Chunk 34
kable(data.frame(p = c("TRUE", "TRUE", "FALSE", "FALSE"),
q = c("TRUE", "FALSE", "FASE", "TRUE"),
pq = c("TRUE", "FALSE", "TRIE", "TRUE")))
# Chunk 35
nombres = c("Ana", "Maria", "José", "Juan", "Carlos", "Julia")
# Chunk 36
profesion = c("Biologa", "Ingeniera", "Sociologo", "Ingeniero", "Biologo", "Profesora")
# Chunk 37
str(profesion)
profesion_factor = as.factor(profesion)
str(profesion_factor)
levels(profesion_factor)
formacion = c("Biología", "Ingeniería", "Sociología", "Ingeniería", "Biología", "Geografía")
formacion = c("Biología", "Ingeniería", "Sociología", "Ingeniería", "Biología", "Geología")
str(formacion)
formacion_factor = as.factor(formacion)
str(formacion_factor)
levels(formacion_factor)
length(formacion_factor)
str(nombres)
formacion %>% c("Biología", "Geología")
formacion %in% c("Biología", "Geología")
formacion[which(formacion == "Biologia")]
formacion[which(formacion == "Biología")]
formacion %in% c("Biología", "Geología")
formacion %in% c("Biología")
formacion[which(formacion == "Biología")]
formacion == formacion_factor
str(formacion)
str(formacion_factor)
table(formacion)
table(formacion_factor)
methods(summary())
methods(summary
)
rm(x)
i = seq(1:10)
i
class(i)
object.size(i)
object.size(i2)
version()
R.version
x
x = rep(1:4, 3)
x
x * x
rep(x, 2)
y = x * 2
x + y
x*2
x*c(2,3)
x
x*2
x
x*c(2,3)
x
x = 1:4
x
x * 2
rep(x, 2)
x + y
x
y
y = x * 2
x + y
x
y
x*2
x*c(2,3)
x
c(2,3)
x*c(2,3,4,5,6,7,8,9,101,11,12)
x*c(2,3,4)
x
kable(data.frame("Original" = data.frame("x" = "1", "2", "3", "4",
c("c(2,3)", "2,", "3"))))
library(kableExtra)
library(knitr)
library(kableExtra)
kable(data.frame("Original" = data.frame("x" = "1", "2", "3", "4",
c("c(2,3)", "2,", "3"))))
kable(data.frame("Original" = data.frame("x" = "1", "2", "3", "4",
c("c(2,3)", "2,", "3"))))
x + y
kable(data.frame("Original" = data.frame("x" = "1", "2", "3", "4",
c("c(2,3)", "2,", "3"))))
library(kableExtra)
kable(data.frame("Original" = data.frame("x" = "1", "2", "3", "4",
c("c(2,3)", "2,", "3"))))
library(kableExtra)
x*c(2,3)
x*c(2,3,4)
sum(x)
x
mean(x)
var(x)
z = sum(x)
x
x = x + x
x
x = x + x
x
X
x = 1:4
x
x * 2
rep(x, 2)
y = x * 2
### Algunas operaciones con objeto
Multiplicando el objeto por un numero
x = 1:4
x
x * 2
rep(x, 2)
y = x * 2
### Algunas operaciones con objeto
Multiplicando el objeto por un numero
x*c(2,3)
x*2
x*c(2,3)
x*c(2,3,4)
sum(x)
a = mean(x)
is.integer(i)
```{r}
i
i = seq(1:10)
i
```{r}
i
i = seq(1:10)
i
i = seq(1:10)
i
class(n)
is.integer(n)
is.numeric(n)
class(n)
is.integer(n)
is.numeric(n)
is.integer(n)
```{r}
class(i)
is.integer(i)
```{r}
getwd()
4075+4750+1780
1780/2
4750/7
10000+980
4075+3450+1780
1780/2
getwd()
19,66*80
19.66*80
i = seq(1:10)
i
class(i)
is.integer(i)
(n = rep(c(1.1, 2.3, 4.8, 7.0, 10.0), 3))
class(n)
is.integer(n)
is.numeric(n)
i2 = as.numeric(i)
class(i2)
is.integer(i2)
is.numeric(i2)
object.size(i) # interger
object.size(i2) #numeric
nombres = c("Ana", "Maria", "José", "Juan", "Carlos", "Julia")
str(nombres)
i == i2
i > i2
i != 2
i >=2
i > 2 & i < 5
which(i > 8)
i < 2 | i < 5
kable(data.frame(p = c("TRUE", "TRUE", "FALSE", "FALSE"),
q = c("TRUE", "FALSE", "FASE", "TRUE"),
pq = c("TRUE", "FALSE", "TRIE", "TRUE")))
library(kableExtra)
getwd()
